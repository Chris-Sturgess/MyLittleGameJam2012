package Scripts{	import Scripts.*;	import flash.events.Event;	import flash.display.MovieClip;	import flash.display.Stage;	import flashx.textLayout.utils.CharacterUtil;	import flashx.textLayout.formats.Float;	public class Engine extends MovieClip	{		var mainPlayer:Player;		var boss:Boss;		var container:MovieClip;		var fireArray:Array;		var laserArray:Array;		var bossDead:Boolean;		var bgLoop = new Background();		var t:int = 0;		var platformArray:Array = new Array();		var level:int = 0;		var playerDead:Boolean;		public function Engine()		{			begin();		}				public function begin()		{			init();		}		public function init()		{			bossDead = false;			playerDead = false;			platformArray = new Array();			fireArray = new Array();			laserArray = new Array();			mainPlayer = new Player(stage,this,fireArray,"earth", platformArray);			container = new MovieClip;			container.addChild(bgLoop);			stage.addChild(container);			container.addChild(mainPlayer);			mainPlayer.x = 0;			mainPlayer.y = stage.stageHeight;			addEventListener(Event.ENTER_FRAME,loop);			initiatePlatforms();			for (var currentPlatform in platformArray)			{				container.addChild(platformArray[currentPlatform]);			}			boss = new Boss(stage,this,laserArray, mainPlayer);			mainPlayer.giveBoss(boss);			boss.x = stage.stageWidth / 2 - boss.width / 2;			boss.y = stage.stageHeight / 2;			container.addChild(boss);			bossDead = false;			initLevels();		}		public function loop(event:Event)		{			checkBoss();		}		public function checkBoss()		{			if (bossDead)			{				level ++;				cleanUp();			}			if (playerDead)			{				level > 0 ? level -- : level = 0;				cleanUp();			}		}				public function cleanUp()		{			var temp;			for (var plat in platformArray)			{				platformArray[plat].parent.removeChild(platformArray[plat]);			}			bgLoop.parent.removeChild(bgLoop);			for (var i:int = container.numChildren - 1; i >= 0; i--)			{				temp = container.getChildAt(i);				temp.die()			}			stage.removeChild(container);			init();		}				public function initLevels()		{			bgLoop.gotoAndPlay(1);			if (level == 1)			{				for (var plat in platformArray)				{					platformArray[plat].gotoAndPlay(5);				}			}			if (level == 2)			{				for (var plat in platformArray)				{					platformArray[plat].gotoAndPlay(8);				}			}			if (level == 3)			{				for (var plat in platformArray)				{					platformArray[plat].gotoAndPlay(11);				}			}			if (level == 4)			{				for (var plat in platformArray)				{					platformArray[plat].gotoAndPlay(14);				}			}		}				public function initiatePlatforms()		{			var newPlatform;			newPlatform = new Platform();			newPlatform.x = 100;			newPlatform.y = 100;			platformArray.push(newPlatform);			newPlatform = new Platform();			newPlatform.x = 100;			newPlatform.y = 300;			platformArray.push(newPlatform);			newPlatform = new Platform();			newPlatform.x = 100;			newPlatform.y = 500;			platformArray.push(newPlatform);			newPlatform = new Platform();			newPlatform.x = 100;			newPlatform.y = 700;			platformArray.push(newPlatform);			newPlatform = new Platform();			newPlatform.x = 350;			newPlatform.y = 100;			platformArray.push(newPlatform);			newPlatform = new Platform();			newPlatform.x = 350;			newPlatform.y = 300;			platformArray.push(newPlatform);			newPlatform = new Platform();			newPlatform.x = 350;			newPlatform.y = 500;			platformArray.push(newPlatform);			newPlatform = new Platform();			newPlatform.x = 350;			newPlatform.y = 700;			platformArray.push(newPlatform);		}	}}